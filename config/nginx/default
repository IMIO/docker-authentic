server {
    listen 443 ssl;
    server_name combo-agents.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;
    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/combo/tenants/$host/static/$1
                    /var/lib/combo/tenants/$host/theme/static/$1
                    /var/lib/combo/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location ~ ^/media/(.+)$ {
        alias /var/lib/combo/tenants/$host/media/$1;
    }

    location / {
        proxy_pass         http://unix:/var/run/combo/combo.sock;
        # proxy_pass         http://127.0.0.1:8004;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }

    error_log /var/log/nginx/error-combo-agents.dev.publik.love.log warn;
    access_log /var/log/nginx/access-combo-agents.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  combo-agents.dev.publik.love;
    access_log  combo-agents.dev.publik.love-access.log combined;
    error_log  combo-agents.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name backoffice-agents.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/combo/tenants/$host/static/$1
                    /var/lib/combo/tenants/$host/theme/static/$1
                    /var/lib/combo/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location ~ ^/media/(.+)$ {
        alias /var/lib/combo/tenants/$host/media/$1;
    }

    location / {
        proxy_pass         http://unix:/var/run/combo/combo.sock;
        # proxy_pass         http://127.0.0.1:8004;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }

    error_log /var/log/nginx/error-backoffice-agents.dev.publik.love.log warn;
    access_log /var/log/nginx/access-backoffice-agents.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  backoffice-agents.dev.publik.love;
    access_log  backoffice-agents.dev.publik.love-access.log combined;
    error_log  backoffice-agents.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name combo-usagers.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/combo/tenants/$host/static/$1
                    /var/lib/combo/tenants/$host/theme/static/$1
                    /var/lib/combo/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location ~ ^/media/(.+)$ {
        alias /var/lib/combo/tenants/$host/media/$1;
    }

    location / {
        proxy_pass         http://unix:/var/run/combo/combo.sock;
        # proxy_pass         http://127.0.0.1:8004;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }
    error_log /var/log/nginx/error-combo-usagers.dev.publik.love.log warn;
    access_log /var/log/nginx/access-combo-usagers.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  combo-usagers.dev.publik.love;
    access_log  combo-usagers.dev.publik.love-access.log combined;
    error_log  combo-usagers.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name backoffice-usagers.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/combo/tenants/$host/static/$1
                    /var/lib/combo/tenants/$host/theme/static/$1
                    /var/lib/combo/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location ~ ^/media/(.+)$ {
        alias /var/lib/combo/tenants/$host/media/$1;
    }

    location / {
        proxy_pass         http://unix:/var/run/combo/combo.sock;
        # proxy_pass         http://127.0.0.1:8004;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }

    error_log /var/log/nginx/error-backoffice-usagers.dev.publik.love.log warn;
    access_log /var/log/nginx/access-backoffice-usagers.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  backoffice-usagers.dev.publik.love;
    access_log  backoffice-usagers.dev.publik.love-access.log combined;
    error_log  backoffice-usagers.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name agents.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/authentic2-multitenant/static/$1
                    /var/lib/authentic2-multitenant/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location / {
        rewrite            ^/accounts/saml/login/ /accounts/fedict/login/ last;
        proxy_pass         http://unix:/run/authentic2-multitenant/authentic2-multitenant.sock;
        # proxy_pass         http://127.0.0.1:8000;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }
    error_log /var/log/nginx/error-agents.dev.publik.love.log warn;
    access_log /var/log/nginx/access-agents.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  agents.dev.publik.love;
    access_log  agents.dev.publik.love-access.log combined;
    error_log  agents.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name usagers.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/authentic2-multitenant/static/$1
                    /var/lib/authentic2-multitenant/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location / {
        rewrite            ^/accounts/saml/login/ /accounts/fedict/login/ last;
        proxy_pass         http://unix:/run/authentic2-multitenant/authentic2-multitenant.sock;
        # proxy_pass         http://127.0.0.1:8000;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }
    error_log /var/log/nginx/error-usagers.dev.publik.love.log warn;
    access_log /var/log/nginx/access-usagers.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  usagers.dev.publik.love;
    access_log  usagers.dev.publik.love-access.log combined;
    error_log  usagers.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name hobo-agents.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/hobo/static/$1
                    /var/lib/hobo/theme/static/$1
                    /var/lib/hobo/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location / {
        proxy_pass         http://unix:/var/run/hobo/hobo.sock;
        # proxy_pass         http://127.0.0.1:8016;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }
    error_log /var/log/nginx/error-hobo-agents.dev.publik.love.log warn;
    access_log /var/log/nginx/access-hobo-agents.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  hobo-agents.dev.publik.love;
    access_log  hobo-agents.dev.publik.love-access.log combined;
    error_log  hobo-agents.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name hobo-usagers.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location ~ ^/static/(.+)$ {
        root /;
        try_files /var/lib/hobo/static/$1
                    /var/lib/hobo/theme/static/$1
                    /var/lib/hobo/collectstatic/$1
                    =404;
        add_header      'Access-Control-Allow-Origin' '*';
        add_header      'Service-Worker-Allowed' '/';
    }

    location / {
        proxy_pass         http://unix:/var/run/hobo/hobo.sock;
        # proxy_pass         http://127.0.0.1:8016;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }
    error_log /var/log/nginx/error-hobo-usagers.dev.publik.love.log warn;
    access_log /var/log/nginx/access-hobo-usagers.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  hobo-usagers.dev.publik.love;
    access_log  hobo-usagers.dev.publik.love-access.log combined;
    error_log  hobo-usagers.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}

upstream plone6 {
    server plone6:8080;
}
server {
    listen 443 ssl;
    server_name plone6.dev.publik.love;

    ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

    location / {
        rewrite ^/(.*)$     /VirtualHostBase/$scheme/plone6.dev.publik.love:443/Plone/VirtualHostRoot/$1 break;
        proxy_pass         http://plone6;
        #proxy_pass         http://plone6/VirtualHostBase/https/plone6.dev.publik.love:443/Plone/VirtualHostRoot/;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-SSL on;
        proxy_set_header   X-Forwarded-Protocol ssl;
        proxy_set_header   X-Forwarded-Proto https;
    }

    error_log /var/log/nginx/error-plone6.dev.publik.love.log warn;
    access_log /var/log/nginx/access-plone6.dev.publik.love.log combined;
}
server {
    listen   80;
    server_name  plone6.dev.publik.love;
    access_log  plone6.dev.publik.love-access.log combined;
    error_log  plone6.dev.publik.love-error.log;
    return 301 https://$host$request_uri;
}

# XXX plone4 image do not work at this moment
# upstream plone4 {
#     server plone4:8080;
# }

# server {
#     listen 443 ssl;
#     server_name plone4.dev.publik.love;

#     ssl_certificate /etc/nginx/certs/dev.publik.love-fullchain.pem;
#     ssl_certificate_key /etc/nginx/certs/dev.publik.love-privkey.pem;

#     location / {
#         rewrite ^/(.*)$     /VirtualHostBase/$scheme/plone4.dev.publik.love:443/Plone/VirtualHostRoot/$1 break;
#         proxy_pass         http://plone4;
#         proxy_set_header   Host $http_host;
#         proxy_set_header   X-Real-IP       $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-SSL on;
#         proxy_set_header   X-Forwarded-Protocol ssl;
#         proxy_set_header   X-Forwarded-Proto https;
#     }
#     error_log /var/log/nginx/error-plone4.dev.publik.love.log warn;
#     access_log /var/log/nginx/access-plone4.dev.publik.love.log combined;
# }
# server {
#     listen   80;
#     server_name  plone4.dev.publik.love;
#     access_log  plone4.dev.publik.love-access.log combined;
#     error_log  plone4.dev.publik.love-error.log;
#     return 301 https://$host$request_uri;
# }
