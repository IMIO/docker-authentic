version: '2.4'

services:
  base:
    build:
      context: sso
      dockerfile: Dockerfile
    image: wc/sso:latest
    environment:
      - AGENTS_HOSTNAME=agents.dev.publik.love
      - USAGERS_HOSTNAME=usagers.dev.publik.love
      - environment_label=dev
      - INSTANCE_NAME=authentic80
      - CSRF_FAILURE_VIEW='django.views.csrf.csrf_failure'
    mem_limit: 2048m
    volumes:
      - ./data/hobo:/var/lib/hobo/tenants
      - ./data/combo:/var/lib/combo/tenants
      - ./data/authentic2-multitenant:/var/lib/authentic2-multitenant/tenants
      - ./config/combo/settings.d:/etc/combo/settings.d
      - ./config/authentic2-multitenant/settings.d:/etc/authentic2-multitenant/settings.d
      - ./config/authentic2-multitenant/agents.json:/etc/authentic2-multitenant/agents.json
      - ./config/authentic2-multitenant/usagers.json:/etc/authentic2-multitenant/usagers.json
      - ./config/hobo/settings.d:/etc/hobo/settings.d
      - ./config/hobo-agent/settings.d:/etc/hobo-agent/settings.d
      - ./config/nginx:/etc/nginx/sites-available
      - ./certs:/etc/nginx/certs
      - ./sso/agents.json:/agents.json
      - ./sso/usagers.json:/usagers.json
      - ./sso/agents-index.json:/agents-index.json
      - ./sso/usagers-index.json:/usagers-index.json
      - ./src/scripts:/opt/scripts
      - ./sso/build.sh:/build.sh
      - ./imio-publik-themes/templates:/usr/share/publik/themes/imio/templates
      - ./imio-publik-themes/static:/usr/share/publik/themes/imio/static
    command: tail -f /dev/null
  authentic:
    extends: base
    command: /run.sh
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      memcached:
        condition: service_started
  rabbitmq:
    image: rabbitmq
    hostname: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 5
  database:
    image: postgres
    hostname: database
    volumes:
      - ./data/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    environment:
      - "POSTGRES_PASSWORD=password"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h database"]
      interval: 15s
      timeout: 30s
      retries: 50
  memcached:
    image: memcached
    hostname: memcached
  monitor:
    extends: base
    command: /prometheus.sh
volumes:
  pgdata:

networks:
  external:
    external: true